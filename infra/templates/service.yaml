Parameters:
  Tag:
    Type: String
    Default: latest
  DesiredCount:
    Type: Number
    Default: 0
  ContainerName:
    Type: String
  TargetGroup:
    Type: String
  Cluster:
    Type: String

Resources:
  EcsServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ecs-service-${AWS::StackName}
      Path: /
      AssumeRolePolicyDocument: |
        {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": [ "ecs.amazonaws.com" ] },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole
  Repository:
    Type: AWS::ECR::Repository
    DeletionPolicy: Retain
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-${ContainerName}
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}:${Tag}
          Essential: true
          Memory: 128
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
          Environment:
            - Name: PASSENGER_APP
              Value: production
  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      Role: !Ref EcsServiceRole
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: !Ref ContainerName
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup

Outputs:
  Repository:
    Value: !Ref Repository
  StackName:
    Value: !Ref AWS::StackName
